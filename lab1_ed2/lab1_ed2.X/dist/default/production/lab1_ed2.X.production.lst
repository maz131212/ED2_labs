

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Jul 16 17:27:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  001E                     _ADRESH	set	30
   284  0009                     _PORTE	set	9
   285  0006                     _PORTB	set	6
   286  0005                     _PORTA	set	5
   287  001F                     _ADCON0bits	set	31
   288  0008                     _PORTD	set	8
   289  000C                     _PIR1bits	set	12
   290  0007                     _PORTC	set	7
   291  0006                     _PORTBbits	set	6
   292  000B                     _INTCONbits	set	11
   293  009F                     _ADCON1bits	set	159
   294  0096                     _IOCBbits	set	150
   295  008C                     _PIE1bits	set	140
   296  008F                     _OSCCONbits	set	143
   297  0089                     _TRISE	set	137
   298  0088                     _TRISD	set	136
   299  0087                     _TRISC	set	135
   300  0086                     _TRISB	set	134
   301  0085                     _TRISA	set	133
   302  0189                     _ANSELH	set	393
   303  0188                     _ANSEL	set	392
   304                           
   305                           	psect	cinit
   306  000F                     start_initialization:	
   307                           ; #config settings
   308                           
   309  000F                     __initialization:
   310                           
   311                           ; Clear objects allocated to COMMON
   312  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   313  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   314  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   315  0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   316  0013  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
   317  0014  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
   318  0015                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  0015                     __end_of__initialization:
   322  0015  0183               	clrf	3
   323  0016  120A  118A  28B5   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssCOMMON
   326  0078                     __pbssCOMMON:
   327  0078                     _banderaT0:
   328  0078                     	ds	1
   329  0079                     _VAR:
   330  0079                     	ds	1
   331  007A                     _b_dec:
   332  007A                     	ds	1
   333  007B                     _b_inc:
   334  007B                     	ds	1
   335  007C                     _count:
   336  007C                     	ds	1
   337  007D                     _v_tmr0:
   338  007D                     	ds	1
   339                           
   340                           	psect	cstackCOMMON
   341  0070                     __pcstackCOMMON:
   342  0070                     ?_readADC:
   343  0070                     ??_readADC:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_setup:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_ISR:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_main:	
   353                           ; 1 bytes @ 0x0
   354                           
   355                           
   356                           ; 1 bytes @ 0x0
   357  0070                     	ds	1
   358  0071                     readADC@val:
   359                           
   360                           ; 1 bytes @ 0x1
   361  0071                     	ds	1
   362  0072                     ??_ISR:
   363                           
   364                           ; 1 bytes @ 0x2
   365  0072                     	ds	3
   366  0075                     ??_setup:
   367                           
   368                           ; 1 bytes @ 0x5
   369  0075                     	ds	2
   370  0077                     ??_main:
   371                           
   372                           ; 1 bytes @ 0x7
   373  0077                     	ds	1
   374                           
   375                           	psect	maintext
   376  00B5                     __pmaintext:	
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 100 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : B00/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0
   398 ;;      Temps:          1       0       0       0       0
   399 ;;      Totals:         1       0       0       0       0
   400 ;;Total ram usage:        1 bytes
   401 ;; Hardware stack levels required when called:    3
   402 ;; This function calls:
   403 ;;		_setup
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _main
   411  00B5                     _main:
   412  00B5                     l759:	
   413                           ;incstack = 0
   414                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   415                           
   416                           
   417                           ;main.c: 103: 
   418  00B5  120A  118A  2019  120A  118A  	fcall	_setup
   419  00BA                     l761:
   420                           
   421                           ;main.c: 110:     PIE1bits.ADIE = 1;;main.c: 112:     INTCONbits.PEIE = 1;
   422  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   423  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   424  00BC  149F               	bsf	31,1	;volatile
   425  00BD                     l763:
   426                           
   427                           ;main.c: 113:     INTCONbits.GIE = 1;
   428  00BD  3010               	movlw	16
   429  00BE  00F7               	movwf	??_main
   430  00BF                     u97:
   431  00BF  0BF7               	decfsz	??_main,f
   432  00C0  28BF               	goto	u97
   433  00C1  0000               	nop
   434  00C2  28BA               	goto	l761
   435  00C3  120A  118A  280C   	ljmp	start
   436  00C6                     __end_of_main:
   437                           
   438                           	psect	text1
   439  0019                     __ptext1:	
   440 ;; *************** function _setup *****************
   441 ;; Defined at:
   442 ;;		line 122 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0
   458 ;;      Temps:          2       0       0       0       0
   459 ;;      Totals:         2       0       0       0       0
   460 ;;Total ram usage:        2 bytes
   461 ;; Hardware stack levels used:    1
   462 ;; Hardware stack levels required when called:    2
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _setup
   472  0019                     _setup:
   473  0019                     l685:	
   474                           ;incstack = 0
   475                           ; Regs used in _setup: [wreg+status,2+status,0]
   476                           
   477                           
   478                           ;main.c: 126:     ADCON1bits.VCFG1 = 0;
   479  0019  3001               	movlw	1
   480  001A  1683               	bsf	3,5	;RP0=1, select bank1
   481  001B  1303               	bcf	3,6	;RP1=0, select bank1
   482  001C  0085               	movwf	5	;volatile
   483  001D                     l687:
   484                           
   485                           ;main.c: 127: 
   486  001D  1283               	bcf	3,5	;RP0=0, select bank0
   487  001E  1303               	bcf	3,6	;RP1=0, select bank0
   488  001F  0185               	clrf	5	;volatile
   489  0020                     l689:
   490                           
   491                           ;main.c: 128:     ADCON1bits.ADFM = 0;
   492  0020  30FF               	movlw	255
   493  0021  1683               	bsf	3,5	;RP0=1, select bank1
   494  0022  1303               	bcf	3,6	;RP1=0, select bank1
   495  0023  0086               	movwf	6	;volatile
   496                           
   497                           ;main.c: 129: 
   498  0024  1283               	bcf	3,5	;RP0=0, select bank0
   499  0025  1303               	bcf	3,6	;RP1=0, select bank0
   500  0026  0186               	clrf	6	;volatile
   501                           
   502                           ;main.c: 130:     ADCON0bits.ADON = 1;
   503  0027  1683               	bsf	3,5	;RP0=1, select bank1
   504  0028  1303               	bcf	3,6	;RP1=0, select bank1
   505  0029  0187               	clrf	7	;volatile
   506                           
   507                           ;main.c: 131: 
   508  002A  1283               	bcf	3,5	;RP0=0, select bank0
   509  002B  1303               	bcf	3,6	;RP1=0, select bank0
   510  002C  0187               	clrf	7	;volatile
   511                           
   512                           ;main.c: 132:     ADCON0bits.CHS = 0;
   513  002D  1683               	bsf	3,5	;RP0=1, select bank1
   514  002E  1303               	bcf	3,6	;RP1=0, select bank1
   515  002F  0188               	clrf	8	;volatile
   516                           
   517                           ;main.c: 133:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   518  0030  1283               	bcf	3,5	;RP0=0, select bank0
   519  0031  1303               	bcf	3,6	;RP1=0, select bank0
   520  0032  0188               	clrf	8	;volatile
   521                           
   522                           ;main.c: 134: 
   523  0033  1683               	bsf	3,5	;RP0=1, select bank1
   524  0034  1303               	bcf	3,6	;RP1=0, select bank1
   525  0035  0189               	clrf	9	;volatile
   526                           
   527                           ;main.c: 135:     ADCON0bits.GO_DONE = 1;
   528  0036  1283               	bcf	3,5	;RP0=0, select bank0
   529  0037  1303               	bcf	3,6	;RP1=0, select bank0
   530  0038  0189               	clrf	9	;volatile
   531  0039                     l691:
   532                           
   533                           ;main.c: 136:     _delay((unsigned long)((5)*(4000000/4000.0)));
   534  0039  3001               	movlw	1
   535  003A  1683               	bsf	3,5	;RP0=1, select bank3
   536  003B  1703               	bsf	3,6	;RP1=1, select bank3
   537  003C  0088               	movwf	8	;volatile
   538  003D                     l693:
   539                           
   540                           ;main.c: 137: 
   541  003D  0189               	clrf	9	;volatile
   542  003E                     l695:
   543  003E  1683               	bsf	3,5	;RP0=1, select bank1
   544  003F  1303               	bcf	3,6	;RP1=0, select bank1
   545  0040  080F               	movf	15,w	;volatile
   546  0041  398F               	andlw	-113
   547  0042  3860               	iorlw	96
   548  0043  008F               	movwf	15	;volatile
   549  0044                     l697:
   550  0044  140F               	bsf	15,0	;volatile
   551  0045                     l699:
   552  0045  1283               	bcf	3,5	;RP0=0, select bank0
   553  0046  1303               	bcf	3,6	;RP1=0, select bank0
   554  0047  130C               	bcf	12,6	;volatile
   555  0048                     l701:
   556  0048  1683               	bsf	3,5	;RP0=1, select bank1
   557  0049  1303               	bcf	3,6	;RP1=0, select bank1
   558  004A  170C               	bsf	12,6	;volatile
   559  004B                     l703:
   560  004B  170B               	bsf	11,6	;volatile
   561  004C                     l705:
   562  004C  178B               	bsf	11,7	;volatile
   563  004D                     l707:
   564  004D  158B               	bsf	11,3	;volatile
   565  004E                     l709:
   566  004E  1416               	bsf	22,0	;volatile
   567  004F                     l711:
   568  004F  1496               	bsf	22,1	;volatile
   569  0050                     l713:
   570  0050  1283               	bcf	3,5	;RP0=0, select bank0
   571  0051  1303               	bcf	3,6	;RP1=0, select bank0
   572  0052  139F               	bcf	31,7	;volatile
   573  0053                     l715:
   574  0053  171F               	bsf	31,6	;volatile
   575  0054                     l717:
   576  0054  1683               	bsf	3,5	;RP0=1, select bank1
   577  0055  1303               	bcf	3,6	;RP1=0, select bank1
   578  0056  121F               	bcf	31,4	;volatile
   579  0057                     l719:
   580  0057  129F               	bcf	31,5	;volatile
   581  0058                     l721:
   582  0058  139F               	bcf	31,7	;volatile
   583  0059                     l723:
   584  0059  1283               	bcf	3,5	;RP0=0, select bank0
   585  005A  1303               	bcf	3,6	;RP1=0, select bank0
   586  005B  141F               	bsf	31,0	;volatile
   587  005C                     l725:
   588  005C  30C3               	movlw	-61
   589  005D  059F               	andwf	31,f	;volatile
   590  005E  3010               	movlw	16
   591  005F  00F5               	movwf	??_setup
   592  0060                     u107:
   593  0060  0BF5               	decfsz	??_setup,f
   594  0061  2860               	goto	u107
   595  0062  0000               	nop
   596  0063                     l727:
   597  0063  1283               	bcf	3,5	;RP0=0, select bank0
   598  0064  1303               	bcf	3,6	;RP1=0, select bank0
   599  0065  149F               	bsf	31,1	;volatile
   600  0066  3007               	movlw	7
   601  0067  00F6               	movwf	??_setup+1
   602  0068  307D               	movlw	125
   603  0069  00F5               	movwf	??_setup
   604  006A                     u117:
   605  006A  0BF5               	decfsz	??_setup,f
   606  006B  286A               	goto	u117
   607  006C  0BF6               	decfsz	??_setup+1,f
   608  006D  286A               	goto	u117
   609  006E                     l80:
   610  006E  0008               	return
   611  006F                     __end_of_setup:
   612                           
   613                           	psect	text2
   614  006F                     __ptext2:	
   615 ;; *************** function _ISR *****************
   616 ;; Defined at:
   617 ;;		line 64 in file "main.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0, pclath, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0
   633 ;;      Temps:          3       0       0       0       0
   634 ;;      Totals:         3       0       0       0       0
   635 ;;Total ram usage:        3 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    1
   638 ;; This function calls:
   639 ;;		_readADC
   640 ;; This function is called by:
   641 ;;		Interrupt level 1
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _ISR
   647  006F                     _ISR:
   648  006F                     i1l729:
   649                           
   650                           ;main.c: 67: 
   651  006F  1C0B               	btfss	11,0	;volatile
   652  0070  2872               	goto	u1_21
   653  0071  2873               	goto	u1_20
   654  0072                     u1_21:
   655  0072  289C               	goto	i1l753
   656  0073                     u1_20:
   657  0073                     i1l731:
   658                           
   659                           ;main.c: 68: ;main.c: 69: 
   660  0073  1283               	bcf	3,5	;RP0=0, select bank0
   661  0074  1303               	bcf	3,6	;RP1=0, select bank0
   662  0075  1C06               	btfss	6,0	;volatile
   663  0076  2878               	goto	u2_21
   664  0077  2879               	goto	u2_20
   665  0078                     u2_21:
   666  0078  287B               	goto	i1l64
   667  0079                     u2_20:
   668  0079                     i1l733:
   669  0079  01FB               	clrf	_b_inc
   670  007A  0AFB               	incf	_b_inc,f
   671  007B                     i1l64:
   672                           
   673                           ;main.c: 70: 
   674  007B  1806               	btfsc	6,0	;volatile
   675  007C  287E               	goto	u3_21
   676  007D  287F               	goto	u3_20
   677  007E                     u3_21:
   678  007E  2889               	goto	i1l741
   679  007F                     u3_20:
   680  007F                     i1l735:
   681  007F  037B               	decf	_b_inc,w
   682  0080  1D03               	btfss	3,2
   683  0081  2883               	goto	u4_21
   684  0082  2884               	goto	u4_20
   685  0083                     u4_21:
   686  0083  2889               	goto	i1l741
   687  0084                     u4_20:
   688  0084                     i1l737:
   689                           
   690                           ;main.c: 71: ;main.c: 72:     while (1)
   691  0084  01FB               	clrf	_b_inc
   692  0085                     i1l739:
   693                           
   694                           ;main.c: 73:     {
   695  0085  3001               	movlw	1
   696  0086  00F2               	movwf	??_ISR
   697  0087  0872               	movf	??_ISR,w
   698  0088  0787               	addwf	7,f	;volatile
   699  0089                     i1l741:
   700                           
   701                           ;main.c: 76:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   702  0089  1C86               	btfss	6,1	;volatile
   703  008A  288C               	goto	u5_21
   704  008B  288D               	goto	u5_20
   705  008C                     u5_21:
   706  008C  288F               	goto	i1l66
   707  008D                     u5_20:
   708  008D                     i1l743:
   709  008D  01FA               	clrf	_b_dec
   710  008E  0AFA               	incf	_b_dec,f
   711  008F                     i1l66:
   712                           
   713                           ;main.c: 77: 
   714  008F  1886               	btfsc	6,1	;volatile
   715  0090  2892               	goto	u6_21
   716  0091  2893               	goto	u6_20
   717  0092                     u6_21:
   718  0092  289B               	goto	i1l751
   719  0093                     u6_20:
   720  0093                     i1l745:
   721  0093  037A               	decf	_b_dec,w
   722  0094  1D03               	btfss	3,2
   723  0095  2897               	goto	u7_21
   724  0096  2898               	goto	u7_20
   725  0097                     u7_21:
   726  0097  289B               	goto	i1l751
   727  0098                     u7_20:
   728  0098                     i1l747:
   729                           
   730                           ;main.c: 78:     };main.c: 79: }
   731  0098  01FA               	clrf	_b_dec
   732  0099                     i1l749:
   733                           
   734                           ;main.c: 80: 
   735  0099  3001               	movlw	1
   736  009A  0287               	subwf	7,f	;volatile
   737  009B                     i1l751:
   738                           
   739                           ;main.c: 83: 
   740  009B  100B               	bcf	11,0	;volatile
   741  009C                     i1l753:
   742                           
   743                           ;main.c: 87: 
   744  009C  1283               	bcf	3,5	;RP0=0, select bank0
   745  009D  1303               	bcf	3,6	;RP1=0, select bank0
   746  009E  1F0C               	btfss	12,6	;volatile
   747  009F  28A1               	goto	u8_21
   748  00A0  28A2               	goto	u8_20
   749  00A1                     u8_21:
   750  00A1  28AE               	goto	i1l69
   751  00A2                     u8_20:
   752  00A2                     i1l755:
   753                           
   754                           ;main.c: 88: ;main.c: 89:     TRISA=0x01;
   755  00A2  120A  118A  20C6  120A  118A  	fcall	_readADC
   756  00A7  00F2               	movwf	??_ISR
   757  00A8  0872               	movf	??_ISR,w
   758  00A9  00F9               	movwf	_VAR
   759  00AA                     i1l757:
   760                           
   761                           ;main.c: 90:     PORTA = 0;
   762  00AA  0879               	movf	_VAR,w
   763  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   764  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   765  00AD  0088               	movwf	8	;volatile
   766  00AE                     i1l69:
   767  00AE  0874               	movf	??_ISR+2,w
   768  00AF  008A               	movwf	10
   769  00B0  0E73               	swapf	??_ISR+1,w
   770  00B1  0083               	movwf	3
   771  00B2  0EFE               	swapf	btemp,f
   772  00B3  0E7E               	swapf	btemp,w
   773  00B4  0009               	retfie
   774  00B5                     __end_of_ISR:
   775                           
   776                           	psect	intentry
   777  0004                     __pintentry:	
   778                           ;incstack = 0
   779                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   780                           
   781  0004                     interrupt_function:
   782  007E                     saved_w	set	btemp
   783  0004  00FE               	movwf	btemp
   784  0005  0E03               	swapf	3,w
   785  0006  00F3               	movwf	??_ISR+1
   786  0007  080A               	movf	10,w
   787  0008  00F4               	movwf	??_ISR+2
   788  0009  120A  118A  286F   	ljmp	_ISR
   789                           
   790                           	psect	text3
   791  00C6                     __ptext3:	
   792 ;; *************** function _readADC *****************
   793 ;; Defined at:
   794 ;;		line 11 in file "ADC.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  val             1    1[COMMON] unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      unsigned char 
   801 ;; Registers used:
   802 ;;		wreg
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         0       0       0       0       0
   809 ;;      Locals:         1       0       0       0       0
   810 ;;      Temps:          1       0       0       0       0
   811 ;;      Totals:         2       0       0       0       0
   812 ;;Total ram usage:        2 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_ISR
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           
   822                           ;psect for function _readADC
   823  00C6                     _readADC:
   824  00C6                     i1l679:	
   825                           ;incstack = 0
   826                           ; Regs used in _readADC: [wreg]
   827                           
   828                           
   829                           ;ADC.c: 13:     uint8_t val = ADRESH;
   830  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   831  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   832  00C8  081E               	movf	30,w	;volatile
   833  00C9  00F0               	movwf	??_readADC
   834  00CA  0870               	movf	??_readADC,w
   835  00CB  00F1               	movwf	readADC@val
   836  00CC                     i1l681:
   837                           
   838                           ;ADC.c: 14:     PIR1bits.ADIF = 0;
   839  00CC  130C               	bcf	12,6	;volatile
   840                           
   841                           ;ADC.c: 16:     return val;
   842  00CD  0871               	movf	readADC@val,w
   843  00CE                     i1l87:
   844  00CE  0008               	return
   845  00CF                     __end_of_readADC:
   846  007E                     btemp	set	126	;btemp
   847  007E                     wtemp0	set	126
   848                           
   849                           	psect	config
   850                           
   851                           ;Config register CONFIG1 @ 0x2007
   852                           ;	Oscillator Selection bits
   853                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   854                           ;	Watchdog Timer Enable bit
   855                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   856                           ;	Power-up Timer Enable bit
   857                           ;	PWRTE = OFF, PWRT disabled
   858                           ;	RE3/MCLR pin function select bit
   859                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   860                           ;	Code Protection bit
   861                           ;	CP = OFF, Program memory code protection is disabled
   862                           ;	Data Code Protection bit
   863                           ;	CPD = OFF, Data memory code protection is disabled
   864                           ;	Brown Out Reset Selection bits
   865                           ;	BOREN = OFF, BOR disabled
   866                           ;	Internal External Switchover bit
   867                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   868                           ;	Fail-Safe Clock Monitor Enabled bit
   869                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   870                           ;	Low Voltage Programming Enable bit
   871                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   872                           ;	In-Circuit Debugger Mode bit
   873                           ;	DEBUG = 0x1, unprogrammed default
   874  2007                     	org	8199
   875  2007  20D4               	dw	8404
   876                           
   877                           ;Config register CONFIG2 @ 0x2008
   878                           ;	Brown-out Reset Selection bit
   879                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   880                           ;	Flash Program Memory Self Write Enable bits
   881                           ;	WRT = OFF, Write protection off
   882  2008                     	org	8200
   883  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup

Critical Paths under _ISR in COMMON

    _ISR->_readADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              7 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              2 COMMON     3     3      0
                            _readADC
 ---------------------------------------------------------------------------------
 (3) _readADC                                              2     2      0      15
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _ISR (ROOT)
   _readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Jul 16 17:27:07 2021

                     l80 006E                       u97 00BF                      l701 0048  
                    l711 004F                      l703 004B                      l721 0058  
                    l713 0050                      l705 004C                      l723 0059  
                    l715 0053                      l707 004D                      l725 005C  
                    l717 0054                      l709 004E                      l727 0063  
                    l719 0057                      l761 00BA                      l691 0039  
                    l763 00BD                      l693 003D                      l685 0019  
                    l695 003E                      l687 001D                      l759 00B5  
                    l697 0044                      l689 0020                      l699 0045  
                    u107 0060                      u117 006A                      _ISR 006F  
                    _VAR 0079                     ?_ISR 0070                     i1l64 007B  
                   i1l66 008F                     i1l69 00AE                     i1l87 00CE  
                   u1_20 0073                     u1_21 0072                     u2_20 0079  
                   u2_21 0078                     u3_20 007F                     u3_21 007E  
                   u4_20 0084                     u4_21 0083                     u5_20 008D  
                   u5_21 008C                     u6_20 0093                     u6_21 0092  
                   u7_20 0098                     u7_21 0097                     u8_20 00A2  
                   u8_21 00A1                     _main 00B5                     btemp 007E  
                   start 000C                    ??_ISR 0072                    ?_main 0070  
                  _ANSEL 0188                    i1l731 0073                    i1l741 0089  
                  i1l733 0079                    i1l751 009B                    i1l743 008D  
                  i1l735 007F                    i1l681 00CC                    i1l745 0093  
                  i1l737 0084                    i1l753 009C                    i1l729 006F  
                  i1l755 00A2                    i1l747 0098                    i1l739 0085  
                  i1l757 00AA                    i1l749 0099                    i1l679 00C6  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _b_dec 007A                    _b_inc 007B  
        __end_of_readADC 00CF                    _count 007C                    _setup 0019  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 00C6                   ??_main 0077  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _v_tmr0 007D                ??_readADC 0070                   saved_w 007E  
__end_of__initialization 0015           __pcstackCOMMON 0070            __end_of_setup 006F  
                ??_setup 0075               __pmaintext 00B5               __pintentry 0004  
                __ptext1 0019                  __ptext2 006F                  __ptext3 00C6  
                _readADC 00C6             __size_of_ISR 0046     end_of_initialization 0015  
              _PORTBbits 0006               readADC@val 0071      start_initialization 000F  
            __end_of_ISR 00B5              __pbssCOMMON 0078                ___latbits 0002  
              _banderaT0 0078                 ?_readADC 0070           __size_of_setup 0056  
      interrupt_function 0004                 _IOCBbits 0096                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of_readADC 0009            __size_of_main 0011               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F  
