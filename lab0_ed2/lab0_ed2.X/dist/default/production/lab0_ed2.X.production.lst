

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 15 21:47:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0009                     _PORTE	set	9
   205  0008                     _PORTD	set	8
   206  0007                     _PORTC	set	7
   207  0006                     _PORTB	set	6
   208  0005                     _PORTA	set	5
   209  0006                     _PORTBbits	set	6
   210  008F                     _OSCCONbits	set	143
   211  0089                     _TRISE	set	137
   212  0088                     _TRISD	set	136
   213  0087                     _TRISC	set	135
   214  0086                     _TRISB	set	134
   215  0085                     _TRISA	set	133
   216  0189                     _ANSELH	set	393
   217  0188                     _ANSEL	set	392
   218                           
   219                           	psect	cinit
   220  07FA                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07FA                     __initialization:
   224                           
   225                           ; Clear objects allocated to COMMON
   226  07FA  01F8               	clrf	__pbssCOMMON& (0+127)
   227  07FB  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   228  07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231  07FC                     __end_of__initialization:
   232  07FC  0183               	clrf	3
   233  07FD  120A  118A  2EBC   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMMON
   236  0078                     __pbssCOMMON:
   237  0078                     _ganador:
   238  0078                     	ds	1
   239  0079                     _numero:
   240  0079                     	ds	1
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:
   244  0070                     ?_setup:
   245  0070                     ??_setup:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_semaforo:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_main:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_Config_7:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ??_Config_7:	
   258                           ; 1 bytes @ 0x0
   259                           
   260                           
   261                           ; 1 bytes @ 0x0
   262  0070                     	ds	2
   263  0072                     Config_7@numero7:
   264                           
   265                           ; 1 bytes @ 0x2
   266  0072                     	ds	1
   267  0073                     Config_7@seg:
   268                           
   269                           ; 1 bytes @ 0x3
   270  0073                     	ds	1
   271  0074                     Config_7@valor:
   272                           
   273                           ; 1 bytes @ 0x4
   274  0074                     	ds	1
   275  0075                     ??_semaforo:
   276                           
   277                           ; 1 bytes @ 0x5
   278  0075                     	ds	3
   279  0078                     ??_main:
   280                           
   281                           	psect	maintext
   282  06BC                     __pmaintext:	
   283                           ; 1 bytes @ 0x8
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 65 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : B00/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels required when called:    2
   309 ;; This function calls:
   310 ;;		_semaforo
   311 ;;		_setup
   312 ;; This function is called by:
   313 ;;		Startup code after reset
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           
   318                           ;psect for function _main
   319  06BC                     _main:
   320  06BC                     l785:	
   321                           ;incstack = 0
   322                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   323                           
   324                           
   325                           ;main.c: 68:     setup();
   326  06BC  120A  118A  26D0  120A  118A  	fcall	_setup
   327  06C1                     l44:
   328  06C1  1283               	bcf	3,5	;RP0=0, select bank0
   329  06C2  1303               	bcf	3,6	;RP1=0, select bank0
   330  06C3  1C06               	btfss	6,0	;volatile
   331  06C4  2EC6               	goto	u11
   332  06C5  2EC7               	goto	u10
   333  06C6                     u11:
   334  06C6  2EC1               	goto	l44
   335  06C7                     u10:
   336  06C7                     l787:
   337                           
   338                           ;main.c: 78:     semaforo();
   339  06C7  120A  118A  26F9  120A  118A  	fcall	_semaforo
   340  06CC  2EC1               	goto	l44
   341  06CD  120A  118A  2800   	ljmp	start
   342  06D0                     __end_of_main:
   343                           
   344                           	psect	text1
   345  06D0                     __ptext1:	
   346 ;; *************** function _setup *****************
   347 ;; Defined at:
   348 ;;		line 92 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; This function calls:
   369 ;;		Nothing
   370 ;; This function is called by:
   371 ;;		_main
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _setup
   377  06D0                     _setup:
   378  06D0                     l723:	
   379                           ;incstack = 0
   380                           ; Regs used in _setup: [wreg+status,2+status,0]
   381                           
   382                           
   383                           ;main.c: 97:     TRISA = 0;
   384  06D0  1683               	bsf	3,5	;RP0=1, select bank1
   385  06D1  1303               	bcf	3,6	;RP1=0, select bank1
   386  06D2  0185               	clrf	5	;volatile
   387                           
   388                           ;main.c: 98:     PORTA = 0;
   389  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   390  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   391  06D5  0185               	clrf	5	;volatile
   392  06D6                     l725:
   393                           
   394                           ;main.c: 99:     TRISB=0xFF;
   395  06D6  30FF               	movlw	255
   396  06D7  1683               	bsf	3,5	;RP0=1, select bank1
   397  06D8  1303               	bcf	3,6	;RP1=0, select bank1
   398  06D9  0086               	movwf	6	;volatile
   399  06DA                     l727:
   400                           
   401                           ;main.c: 100:     PORTB = 0;
   402  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   403  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   404  06DC  0186               	clrf	6	;volatile
   405  06DD                     l729:
   406                           
   407                           ;main.c: 101:     TRISC = 0;
   408  06DD  1683               	bsf	3,5	;RP0=1, select bank1
   409  06DE  1303               	bcf	3,6	;RP1=0, select bank1
   410  06DF  0187               	clrf	7	;volatile
   411  06E0                     l731:
   412                           
   413                           ;main.c: 102:     PORTC = 0;
   414  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   415  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   416  06E2  0187               	clrf	7	;volatile
   417  06E3                     l733:
   418                           
   419                           ;main.c: 103:     TRISD = 0;
   420  06E3  1683               	bsf	3,5	;RP0=1, select bank1
   421  06E4  1303               	bcf	3,6	;RP1=0, select bank1
   422  06E5  0188               	clrf	8	;volatile
   423  06E6                     l735:
   424                           
   425                           ;main.c: 104:     PORTD = 0;
   426  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   427  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   428  06E8  0188               	clrf	8	;volatile
   429  06E9                     l737:
   430                           
   431                           ;main.c: 105:     TRISE = 0;
   432  06E9  1683               	bsf	3,5	;RP0=1, select bank1
   433  06EA  1303               	bcf	3,6	;RP1=0, select bank1
   434  06EB  0189               	clrf	9	;volatile
   435  06EC                     l739:
   436                           
   437                           ;main.c: 106:     PORTE = 0;
   438  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   439  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   440  06EE  0189               	clrf	9	;volatile
   441  06EF                     l741:
   442                           
   443                           ;main.c: 107:     ANSEL = 0;
   444  06EF  1683               	bsf	3,5	;RP0=1, select bank3
   445  06F0  1703               	bsf	3,6	;RP1=1, select bank3
   446  06F1  0188               	clrf	8	;volatile
   447  06F2                     l743:
   448                           
   449                           ;main.c: 108:     ANSELH = 0;
   450  06F2  0189               	clrf	9	;volatile
   451  06F3                     l745:
   452                           
   453                           ;main.c: 111:     OSCCONbits.IRCF = 0b0111;
   454  06F3  3070               	movlw	112
   455  06F4  1683               	bsf	3,5	;RP0=1, select bank1
   456  06F5  1303               	bcf	3,6	;RP1=0, select bank1
   457  06F6  048F               	iorwf	15,f	;volatile
   458  06F7                     l747:
   459                           
   460                           ;main.c: 112:     OSCCONbits.SCS = 1;
   461  06F7  140F               	bsf	15,0	;volatile
   462  06F8                     l52:
   463  06F8  0008               	return
   464  06F9                     __end_of_setup:
   465                           
   466                           	psect	text2
   467  06F9                     __ptext2:	
   468 ;; *************** function _semaforo *****************
   469 ;; Defined at:
   470 ;;		line 195 in file "main.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          3       0       0       0       0
   487 ;;      Totals:         3       0       0       0       0
   488 ;;Total ram usage:        3 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; Hardware stack levels required when called:    1
   491 ;; This function calls:
   492 ;;		_Config_7
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           
   499                           ;psect for function _semaforo
   500  06F9                     _semaforo:
   501  06F9                     l749:	
   502                           ;incstack = 0
   503                           ; Regs used in _semaforo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   504                           
   505                           
   506                           ;main.c: 197:     PORTE = 0b111;
   507  06F9  3007               	movlw	7
   508  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   509  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   510  06FC  0089               	movwf	9	;volatile
   511  06FD                     l751:
   512                           
   513                           ;main.c: 199:     PORTD = 0;
   514  06FD  0188               	clrf	8	;volatile
   515  06FE                     l753:
   516                           
   517                           ;main.c: 200:     numero = Config_7(3);
   518  06FE  3003               	movlw	3
   519  06FF  120A  118A  2768  120A  118A  	fcall	_Config_7
   520  0704  00F5               	movwf	??_semaforo
   521  0705  0875               	movf	??_semaforo,w
   522  0706  00F9               	movwf	_numero
   523  0707                     l755:
   524                           
   525                           ;main.c: 201:     PORTD = numero;
   526  0707  0879               	movf	_numero,w
   527  0708  1283               	bcf	3,5	;RP0=0, select bank0
   528  0709  1303               	bcf	3,6	;RP1=0, select bank0
   529  070A  0088               	movwf	8	;volatile
   530  070B                     l757:
   531                           
   532                           ;main.c: 203:     _delay((unsigned long)((1500)*(4000000/4000.0)));
   533  070B  3008               	movlw	8
   534  070C  00F7               	movwf	??_semaforo+2
   535  070D  309D               	movlw	157
   536  070E  00F6               	movwf	??_semaforo+1
   537  070F  3005               	movlw	5
   538  0710  00F5               	movwf	??_semaforo
   539  0711                     u27:
   540  0711  0BF5               	decfsz	??_semaforo,f
   541  0712  2F11               	goto	u27
   542  0713  0BF6               	decfsz	??_semaforo+1,f
   543  0714  2F11               	goto	u27
   544  0715  0BF7               	decfsz	??_semaforo+2,f
   545  0716  2F11               	goto	u27
   546  0717  2F18               	nop2
   547  0718                     l759:
   548                           
   549                           ;main.c: 204:     PORTE = 0b110;
   550  0718  3006               	movlw	6
   551  0719  1283               	bcf	3,5	;RP0=0, select bank0
   552  071A  1303               	bcf	3,6	;RP1=0, select bank0
   553  071B  0089               	movwf	9	;volatile
   554  071C                     l761:
   555                           
   556                           ;main.c: 206:     PORTD = 0;
   557  071C  0188               	clrf	8	;volatile
   558                           
   559                           ;main.c: 207:     numero = Config_7(2);
   560  071D  3002               	movlw	2
   561  071E  120A  118A  2768  120A  118A  	fcall	_Config_7
   562  0723  00F5               	movwf	??_semaforo
   563  0724  0875               	movf	??_semaforo,w
   564  0725  00F9               	movwf	_numero
   565  0726                     l763:
   566                           
   567                           ;main.c: 208:     PORTD = numero;
   568  0726  0879               	movf	_numero,w
   569  0727  1283               	bcf	3,5	;RP0=0, select bank0
   570  0728  1303               	bcf	3,6	;RP1=0, select bank0
   571  0729  0088               	movwf	8	;volatile
   572  072A                     l765:
   573                           
   574                           ;main.c: 210:     _delay((unsigned long)((1500)*(4000000/4000.0)));
   575  072A  3008               	movlw	8
   576  072B  00F7               	movwf	??_semaforo+2
   577  072C  309D               	movlw	157
   578  072D  00F6               	movwf	??_semaforo+1
   579  072E  3005               	movlw	5
   580  072F  00F5               	movwf	??_semaforo
   581  0730                     u37:
   582  0730  0BF5               	decfsz	??_semaforo,f
   583  0731  2F30               	goto	u37
   584  0732  0BF6               	decfsz	??_semaforo+1,f
   585  0733  2F30               	goto	u37
   586  0734  0BF7               	decfsz	??_semaforo+2,f
   587  0735  2F30               	goto	u37
   588  0736  2F37               	nop2
   589  0737                     l767:
   590                           
   591                           ;main.c: 211:     PORTE = 0b100;
   592  0737  3004               	movlw	4
   593  0738  1283               	bcf	3,5	;RP0=0, select bank0
   594  0739  1303               	bcf	3,6	;RP1=0, select bank0
   595  073A  0089               	movwf	9	;volatile
   596  073B                     l769:
   597                           
   598                           ;main.c: 213:     PORTD = 0;
   599  073B  0188               	clrf	8	;volatile
   600  073C                     l771:
   601                           
   602                           ;main.c: 214:     numero = Config_7(1);
   603  073C  3001               	movlw	1
   604  073D  120A  118A  2768  120A  118A  	fcall	_Config_7
   605  0742  00F5               	movwf	??_semaforo
   606  0743  0875               	movf	??_semaforo,w
   607  0744  00F9               	movwf	_numero
   608  0745                     l773:
   609                           
   610                           ;main.c: 215:     PORTD = numero;
   611  0745  0879               	movf	_numero,w
   612  0746  1283               	bcf	3,5	;RP0=0, select bank0
   613  0747  1303               	bcf	3,6	;RP1=0, select bank0
   614  0748  0088               	movwf	8	;volatile
   615  0749                     l775:
   616                           
   617                           ;main.c: 217:     _delay((unsigned long)((1500)*(4000000/4000.0)));
   618  0749  3008               	movlw	8
   619  074A  00F7               	movwf	??_semaforo+2
   620  074B  309D               	movlw	157
   621  074C  00F6               	movwf	??_semaforo+1
   622  074D  3005               	movlw	5
   623  074E  00F5               	movwf	??_semaforo
   624  074F                     u47:
   625  074F  0BF5               	decfsz	??_semaforo,f
   626  0750  2F4F               	goto	u47
   627  0751  0BF6               	decfsz	??_semaforo+1,f
   628  0752  2F4F               	goto	u47
   629  0753  0BF7               	decfsz	??_semaforo+2,f
   630  0754  2F4F               	goto	u47
   631  0755  2F56               	nop2
   632  0756                     l777:
   633                           
   634                           ;main.c: 218:     PORTE = 0b000;
   635  0756  1283               	bcf	3,5	;RP0=0, select bank0
   636  0757  1303               	bcf	3,6	;RP1=0, select bank0
   637  0758  0189               	clrf	9	;volatile
   638  0759                     l779:
   639                           
   640                           ;main.c: 220:     PORTD = 0;
   641  0759  0188               	clrf	8	;volatile
   642  075A                     l781:
   643                           
   644                           ;main.c: 221:     numero = Config_7(0);
   645  075A  3000               	movlw	0
   646  075B  120A  118A  2768  120A  118A  	fcall	_Config_7
   647  0760  00F5               	movwf	??_semaforo
   648  0761  0875               	movf	??_semaforo,w
   649  0762  00F9               	movwf	_numero
   650  0763                     l783:
   651                           
   652                           ;main.c: 222:     PORTD = numero;
   653  0763  0879               	movf	_numero,w
   654  0764  1283               	bcf	3,5	;RP0=0, select bank0
   655  0765  1303               	bcf	3,6	;RP1=0, select bank0
   656  0766  0088               	movwf	8	;volatile
   657  0767                     l76:
   658  0767  0008               	return
   659  0768                     __end_of_semaforo:
   660                           
   661                           	psect	text3
   662  0768                     __ptext3:	
   663 ;; *************** function _Config_7 *****************
   664 ;; Defined at:
   665 ;;		line 133 in file "main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  numero7         1    wreg     unsigned char 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  numero7         1    2[COMMON] unsigned char 
   670 ;;  valor           1    4[COMMON] unsigned char 
   671 ;;  seg             1    3[COMMON] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      unsigned char 
   674 ;; Registers used:
   675 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         3       0       0       0       0
   683 ;;      Temps:          2       0       0       0       0
   684 ;;      Totals:         5       0       0       0       0
   685 ;;Total ram usage:        5 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_semaforo
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _Config_7
   696  0768                     _Config_7:
   697                           
   698                           ;incstack = 0
   699                           ; Regs used in _Config_7: [wreg-fsr0h+status,2+status,0]
   700                           ;Config_7@numero7 stored from wreg
   701  0768  00F2               	movwf	Config_7@numero7
   702  0769                     l677:
   703                           
   704                           ;main.c: 133: uint8_t Config_7(uint8_t numero7);main.c: 134: {;main.c: 138:     uint8_t 
      +                          valor, seg;;main.c: 139:     seg = numero7;
   705  0769  0872               	movf	Config_7@numero7,w
   706  076A  00F0               	movwf	??_Config_7
   707  076B  0870               	movf	??_Config_7,w
   708  076C  00F3               	movwf	Config_7@seg
   709                           
   710                           ;main.c: 141:     switch(seg)
   711  076D  2FBE               	goto	l713
   712  076E                     l679:
   713                           
   714                           ;main.c: 144:             valor= 0b00111111;
   715  076E  303F               	movlw	63
   716  076F  00F0               	movwf	??_Config_7
   717  0770  0870               	movf	??_Config_7,w
   718  0771  00F4               	movwf	Config_7@valor
   719                           
   720                           ;main.c: 145:             break;
   721  0772  2FF8               	goto	l715
   722  0773                     l681:
   723                           
   724                           ;main.c: 147:             valor= 0b00000110;
   725  0773  3006               	movlw	6
   726  0774  00F0               	movwf	??_Config_7
   727  0775  0870               	movf	??_Config_7,w
   728  0776  00F4               	movwf	Config_7@valor
   729                           
   730                           ;main.c: 148:             break;
   731  0777  2FF8               	goto	l715
   732  0778                     l683:
   733                           
   734                           ;main.c: 150:             valor= 0b01011011;
   735  0778  305B               	movlw	91
   736  0779  00F0               	movwf	??_Config_7
   737  077A  0870               	movf	??_Config_7,w
   738  077B  00F4               	movwf	Config_7@valor
   739                           
   740                           ;main.c: 151:             break;
   741  077C  2FF8               	goto	l715
   742  077D                     l685:
   743                           
   744                           ;main.c: 153:             valor= 0b01001111;
   745  077D  304F               	movlw	79
   746  077E  00F0               	movwf	??_Config_7
   747  077F  0870               	movf	??_Config_7,w
   748  0780  00F4               	movwf	Config_7@valor
   749                           
   750                           ;main.c: 154:             break;
   751  0781  2FF8               	goto	l715
   752  0782                     l687:
   753                           
   754                           ;main.c: 156:             valor= 0b01100110;
   755  0782  3066               	movlw	102
   756  0783  00F0               	movwf	??_Config_7
   757  0784  0870               	movf	??_Config_7,w
   758  0785  00F4               	movwf	Config_7@valor
   759                           
   760                           ;main.c: 157:             break;
   761  0786  2FF8               	goto	l715
   762  0787                     l689:
   763                           
   764                           ;main.c: 159:             valor= 0b01101101;
   765  0787  306D               	movlw	109
   766  0788  00F0               	movwf	??_Config_7
   767  0789  0870               	movf	??_Config_7,w
   768  078A  00F4               	movwf	Config_7@valor
   769                           
   770                           ;main.c: 160:             break;
   771  078B  2FF8               	goto	l715
   772  078C                     l691:
   773                           
   774                           ;main.c: 162:             valor= 0b01111101;
   775  078C  307D               	movlw	125
   776  078D  00F0               	movwf	??_Config_7
   777  078E  0870               	movf	??_Config_7,w
   778  078F  00F4               	movwf	Config_7@valor
   779                           
   780                           ;main.c: 163:             break;
   781  0790  2FF8               	goto	l715
   782  0791                     l693:
   783                           
   784                           ;main.c: 165:             valor= 0b00000111;
   785  0791  3007               	movlw	7
   786  0792  00F0               	movwf	??_Config_7
   787  0793  0870               	movf	??_Config_7,w
   788  0794  00F4               	movwf	Config_7@valor
   789                           
   790                           ;main.c: 166:             break;
   791  0795  2FF8               	goto	l715
   792  0796                     l695:
   793                           
   794                           ;main.c: 168:             valor= 0b01111111;
   795  0796  307F               	movlw	127
   796  0797  00F0               	movwf	??_Config_7
   797  0798  0870               	movf	??_Config_7,w
   798  0799  00F4               	movwf	Config_7@valor
   799                           
   800                           ;main.c: 169:             break;
   801  079A  2FF8               	goto	l715
   802  079B                     l697:
   803                           
   804                           ;main.c: 171:             valor= 0b01101111;
   805  079B  306F               	movlw	111
   806  079C  00F0               	movwf	??_Config_7
   807  079D  0870               	movf	??_Config_7,w
   808  079E  00F4               	movwf	Config_7@valor
   809                           
   810                           ;main.c: 172:             break;
   811  079F  2FF8               	goto	l715
   812  07A0                     l699:
   813                           
   814                           ;main.c: 174:             valor= 0b01110111;
   815  07A0  3077               	movlw	119
   816  07A1  00F0               	movwf	??_Config_7
   817  07A2  0870               	movf	??_Config_7,w
   818  07A3  00F4               	movwf	Config_7@valor
   819                           
   820                           ;main.c: 175:             break;
   821  07A4  2FF8               	goto	l715
   822  07A5                     l701:
   823                           
   824                           ;main.c: 177:             valor= 0b01111100;
   825  07A5  307C               	movlw	124
   826  07A6  00F0               	movwf	??_Config_7
   827  07A7  0870               	movf	??_Config_7,w
   828  07A8  00F4               	movwf	Config_7@valor
   829                           
   830                           ;main.c: 178:             break;
   831  07A9  2FF8               	goto	l715
   832  07AA                     l703:
   833                           
   834                           ;main.c: 180:             valor= 0b00111001;
   835  07AA  3039               	movlw	57
   836  07AB  00F0               	movwf	??_Config_7
   837  07AC  0870               	movf	??_Config_7,w
   838  07AD  00F4               	movwf	Config_7@valor
   839                           
   840                           ;main.c: 181:             break;
   841  07AE  2FF8               	goto	l715
   842  07AF                     l705:
   843                           
   844                           ;main.c: 183:             valor= 0b01011110;
   845  07AF  305E               	movlw	94
   846  07B0  00F0               	movwf	??_Config_7
   847  07B1  0870               	movf	??_Config_7,w
   848  07B2  00F4               	movwf	Config_7@valor
   849                           
   850                           ;main.c: 184:             break;
   851  07B3  2FF8               	goto	l715
   852  07B4                     l707:
   853                           
   854                           ;main.c: 186:             valor= 0b01111001;
   855  07B4  3079               	movlw	121
   856  07B5  00F0               	movwf	??_Config_7
   857  07B6  0870               	movf	??_Config_7,w
   858  07B7  00F4               	movwf	Config_7@valor
   859                           
   860                           ;main.c: 187:             break;
   861  07B8  2FF8               	goto	l715
   862  07B9                     l709:
   863                           
   864                           ;main.c: 189:             valor= 0b01110001;
   865  07B9  3071               	movlw	113
   866  07BA  00F0               	movwf	??_Config_7
   867  07BB  0870               	movf	??_Config_7,w
   868  07BC  00F4               	movwf	Config_7@valor
   869                           
   870                           ;main.c: 190:             break;
   871  07BD  2FF8               	goto	l715
   872  07BE                     l713:
   873  07BE  0873               	movf	Config_7@seg,w
   874  07BF  00F0               	movwf	??_Config_7
   875  07C0  01F1               	clrf	??_Config_7+1
   876                           
   877                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   878                           ; Switch size 1, requested type "simple"
   879                           ; Number of cases is 1, Range of values is 0 to 0
   880                           ; switch strategies available:
   881                           ; Name         Instructions Cycles
   882                           ; simple_byte            4     3 (average)
   883                           ; direct_byte           11     8 (fixed)
   884                           ; jumptable            260     6 (fixed)
   885                           ;	Chosen strategy is simple_byte
   886  07C1  0871               	movf	??_Config_7+1,w
   887  07C2  3A00               	xorlw	0	; case 0
   888  07C3  1903               	skipnz
   889  07C4  2FC6               	goto	l809
   890  07C5  2FF8               	goto	l715
   891  07C6                     l809:
   892                           
   893                           ; Switch size 1, requested type "simple"
   894                           ; Number of cases is 16, Range of values is 0 to 15
   895                           ; switch strategies available:
   896                           ; Name         Instructions Cycles
   897                           ; simple_byte           49    25 (average)
   898                           ; direct_byte           56     8 (fixed)
   899                           ; jumptable            260     6 (fixed)
   900                           ;	Chosen strategy is simple_byte
   901  07C6  0870               	movf	??_Config_7,w
   902  07C7  3A00               	xorlw	0	; case 0
   903  07C8  1903               	skipnz
   904  07C9  2F6E               	goto	l679
   905  07CA  3A01               	xorlw	1	; case 1
   906  07CB  1903               	skipnz
   907  07CC  2F73               	goto	l681
   908  07CD  3A03               	xorlw	3	; case 2
   909  07CE  1903               	skipnz
   910  07CF  2F78               	goto	l683
   911  07D0  3A01               	xorlw	1	; case 3
   912  07D1  1903               	skipnz
   913  07D2  2F7D               	goto	l685
   914  07D3  3A07               	xorlw	7	; case 4
   915  07D4  1903               	skipnz
   916  07D5  2F82               	goto	l687
   917  07D6  3A01               	xorlw	1	; case 5
   918  07D7  1903               	skipnz
   919  07D8  2F87               	goto	l689
   920  07D9  3A03               	xorlw	3	; case 6
   921  07DA  1903               	skipnz
   922  07DB  2F8C               	goto	l691
   923  07DC  3A01               	xorlw	1	; case 7
   924  07DD  1903               	skipnz
   925  07DE  2F91               	goto	l693
   926  07DF  3A0F               	xorlw	15	; case 8
   927  07E0  1903               	skipnz
   928  07E1  2F96               	goto	l695
   929  07E2  3A01               	xorlw	1	; case 9
   930  07E3  1903               	skipnz
   931  07E4  2F9B               	goto	l697
   932  07E5  3A03               	xorlw	3	; case 10
   933  07E6  1903               	skipnz
   934  07E7  2FA0               	goto	l699
   935  07E8  3A01               	xorlw	1	; case 11
   936  07E9  1903               	skipnz
   937  07EA  2FA5               	goto	l701
   938  07EB  3A07               	xorlw	7	; case 12
   939  07EC  1903               	skipnz
   940  07ED  2FAA               	goto	l703
   941  07EE  3A01               	xorlw	1	; case 13
   942  07EF  1903               	skipnz
   943  07F0  2FAF               	goto	l705
   944  07F1  3A03               	xorlw	3	; case 14
   945  07F2  1903               	skipnz
   946  07F3  2FB4               	goto	l707
   947  07F4  3A01               	xorlw	1	; case 15
   948  07F5  1903               	skipnz
   949  07F6  2FB9               	goto	l709
   950  07F7  2FF8               	goto	l715
   951  07F8                     l715:
   952                           
   953                           ;main.c: 192:     return valor;
   954  07F8  0874               	movf	Config_7@valor,w
   955  07F9                     l73:
   956  07F9  0008               	return
   957  07FA                     __end_of_Config_7:
   958  007E                     btemp	set	126	;btemp
   959  007E                     wtemp0	set	126
   960                           
   961                           	psect	config
   962                           
   963                           ;Config register CONFIG1 @ 0x2007
   964                           ;	Oscillator Selection bits
   965                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   966                           ;	Watchdog Timer Enable bit
   967                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   968                           ;	Power-up Timer Enable bit
   969                           ;	PWRTE = OFF, PWRT disabled
   970                           ;	RE3/MCLR pin function select bit
   971                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   972                           ;	Code Protection bit
   973                           ;	CP = OFF, Program memory code protection is disabled
   974                           ;	Data Code Protection bit
   975                           ;	CPD = OFF, Data memory code protection is disabled
   976                           ;	Brown Out Reset Selection bits
   977                           ;	BOREN = OFF, BOR disabled
   978                           ;	Internal External Switchover bit
   979                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   980                           ;	Fail-Safe Clock Monitor Enabled bit
   981                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   982                           ;	Low Voltage Programming Enable bit
   983                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   984                           ;	In-Circuit Debugger Mode bit
   985                           ;	DEBUG = 0x1, unprogrammed default
   986  2007                     	org	8199
   987  2007  20D4               	dw	8404
   988                           
   989                           ;Config register CONFIG2 @ 0x2008
   990                           ;	Brown-out Reset Selection bit
   991                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   992                           ;	Flash Program Memory Self Write Enable bits
   993                           ;	WRT = OFF, Write protection off
   994  2008                     	org	8200
   995  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo
    _semaforo->_Config_7

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                           _semaforo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0      45
                                              5 COMMON     3     3      0
                           _Config_7
 ---------------------------------------------------------------------------------
 (2) _Config_7                                             5     5      0      45
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _semaforo
     _Config_7
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 15 21:47:43 2021

                     l52 06F8                       l44 06C1                       l73 07F9  
                     l76 0767                       u10 06C7                       u11 06C6  
                     u27 0711                       u37 0730                       u47 074F  
                    l701 07A5                      l703 07AA                      l705 07AF  
                    l713 07BE                      l707 07B4                      l715 07F8  
                    l731 06E0                      l723 06D0                      l709 07B9  
                    l741 06EF                      l733 06E3                      l725 06D6  
                    l751 06FD                      l743 06F2                      l735 06E6  
                    l727 06DA                      l809 07C6                      l681 0773  
                    l761 071C                      l753 06FE                      l745 06F3  
                    l737 06E9                      l729 06DD                      l691 078C  
                    l683 0778                      l771 073C                      l763 0726  
                    l755 0707                      l747 06F7                      l739 06EC  
                    l693 0791                      l685 077D                      l677 0769  
                    l781 075A                      l773 0745                      l765 072A  
                    l757 070B                      l749 06F9                      l695 0796  
                    l687 0782                      l679 076E                      l783 0763  
                    l775 0749                      l767 0737                      l759 0718  
                    l697 079B                      l689 0787                      l777 0756  
                    l769 073B                      l785 06BC                      l699 07A0  
                    l779 0759                      l787 06C7                     _main 06BC  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 06D0  
                  status 0003                    wtemp0 007E         __end_of_Config_7 07FA  
        __initialization 07FA             __end_of_main 06D0                   ??_main 0078  
                 ?_setup 0070                   _ANSELH 0189                   _numero 0079  
       __end_of_semaforo 0768  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 06F9                ?_Config_7 0070                  ??_setup 0070  
             __pmaintext 06BC               ??_Config_7 0070                ?_semaforo 0070  
                _ganador 0078                  __ptext1 06D0                  __ptext2 06F9  
                __ptext3 0768     end_of_initialization 07FC               ??_semaforo 0075  
              _PORTBbits 0006      start_initialization 07FA        __size_of_Config_7 0092  
            __pbssCOMMON 0078                ___latbits 0002        __size_of_semaforo 006F  
         __size_of_setup 0029            Config_7@valor 0074                 _Config_7 0768  
          __size_of_main 0014          Config_7@numero7 0072                 _semaforo 06F9  
            Config_7@seg 0073               _OSCCONbits 008F  
