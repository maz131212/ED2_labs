

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 15 21:39:34 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0009                     _PORTE	set	9
   205  0008                     _PORTD	set	8
   206  0007                     _PORTC	set	7
   207  0006                     _PORTB	set	6
   208  0005                     _PORTA	set	5
   209  0006                     _PORTBbits	set	6
   210  008F                     _OSCCONbits	set	143
   211  0089                     _TRISE	set	137
   212  0088                     _TRISD	set	136
   213  0087                     _TRISC	set	135
   214  0086                     _TRISB	set	134
   215  0085                     _TRISA	set	133
   216  0189                     _ANSELH	set	393
   217  0188                     _ANSEL	set	392
   218                           
   219                           	psect	cinit
   220  07FA                     start_initialization:	
   221                           ; #config settings
   222                           
   223  07FA                     __initialization:
   224                           
   225                           ; Clear objects allocated to COMMON
   226  07FA  01F8               	clrf	__pbssCOMMON& (0+127)
   227  07FB  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   228  07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231  07FC                     __end_of__initialization:
   232  07FC  0183               	clrf	3
   233  07FD  120A  118A  2EBB   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMMON
   236  0078                     __pbssCOMMON:
   237  0078                     _ganador:
   238  0078                     	ds	1
   239  0079                     _numero:
   240  0079                     	ds	1
   241                           
   242                           	psect	cstackCOMMON
   243  0070                     __pcstackCOMMON:
   244  0070                     ?_setup:
   245  0070                     ??_setup:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_semaforo:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_main:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_Config_7:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ??_Config_7:	
   258                           ; 1 bytes @ 0x0
   259                           
   260                           
   261                           ; 1 bytes @ 0x0
   262  0070                     	ds	2
   263  0072                     Config_7@numero7:
   264                           
   265                           ; 1 bytes @ 0x2
   266  0072                     	ds	1
   267  0073                     Config_7@seg:
   268                           
   269                           ; 1 bytes @ 0x3
   270  0073                     	ds	1
   271  0074                     Config_7@valor:
   272                           
   273                           ; 1 bytes @ 0x4
   274  0074                     	ds	1
   275  0075                     ??_semaforo:
   276                           
   277                           ; 1 bytes @ 0x5
   278  0075                     	ds	3
   279  0078                     ??_main:
   280                           
   281                           	psect	maintext
   282  06BB                     __pmaintext:	
   283                           ; 1 bytes @ 0x8
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 65 in file "main.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : B00/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels required when called:    2
   309 ;; This function calls:
   310 ;;		_semaforo
   311 ;;		_setup
   312 ;; This function is called by:
   313 ;;		Startup code after reset
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           
   318                           ;psect for function _main
   319  06BB                     _main:
   320  06BB                     l788:	
   321                           ;incstack = 0
   322                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   323                           
   324                           
   325                           ;main.c: 68:     setup();
   326  06BB  120A  118A  26D0  120A  118A  	fcall	_setup
   327  06C0                     l44:
   328  06C0  1283               	bcf	3,5	;RP0=0, select bank0
   329  06C1  1303               	bcf	3,6	;RP1=0, select bank0
   330  06C2  1C06               	btfss	6,0	;volatile
   331  06C3  2EC5               	goto	u11
   332  06C4  2EC6               	goto	u10
   333  06C5                     u11:
   334  06C5  2EC0               	goto	l44
   335  06C6                     u10:
   336  06C6                     l790:
   337                           
   338                           ;main.c: 78:     semaforo();
   339  06C6  120A  118A  26F9  120A  118A  	fcall	_semaforo
   340                           
   341                           ;main.c: 80:     while(ganador == 0){
   342  06CB  2ECC               	goto	l47
   343  06CC                     l48:
   344  06CC                     l47:	
   345                           ;main.c: 85:     }
   346                           
   347                           
   348                           ;main.c: 80:     while(ganador == 0){
   349  06CC  2ECC               	goto	l48
   350  06CD  120A  118A  2800   	ljmp	start
   351  06D0                     __end_of_main:
   352                           
   353                           	psect	text1
   354  06D0                     __ptext1:	
   355 ;; *************** function _setup *****************
   356 ;; Defined at:
   357 ;;		line 97 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2, status,0
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _setup
   386  06D0                     _setup:
   387  06D0                     l726:	
   388                           ;incstack = 0
   389                           ; Regs used in _setup: [wreg+status,2+status,0]
   390                           
   391                           
   392                           ;main.c: 102:     TRISA = 0;
   393  06D0  1683               	bsf	3,5	;RP0=1, select bank1
   394  06D1  1303               	bcf	3,6	;RP1=0, select bank1
   395  06D2  0185               	clrf	5	;volatile
   396                           
   397                           ;main.c: 103:     PORTA = 0;
   398  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   399  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   400  06D5  0185               	clrf	5	;volatile
   401  06D6                     l728:
   402                           
   403                           ;main.c: 104:     TRISB=0xFF;
   404  06D6  30FF               	movlw	255
   405  06D7  1683               	bsf	3,5	;RP0=1, select bank1
   406  06D8  1303               	bcf	3,6	;RP1=0, select bank1
   407  06D9  0086               	movwf	6	;volatile
   408  06DA                     l730:
   409                           
   410                           ;main.c: 105:     PORTB = 0;
   411  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   412  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   413  06DC  0186               	clrf	6	;volatile
   414  06DD                     l732:
   415                           
   416                           ;main.c: 106:     TRISC = 0;
   417  06DD  1683               	bsf	3,5	;RP0=1, select bank1
   418  06DE  1303               	bcf	3,6	;RP1=0, select bank1
   419  06DF  0187               	clrf	7	;volatile
   420  06E0                     l734:
   421                           
   422                           ;main.c: 107:     PORTC = 0;
   423  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   424  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   425  06E2  0187               	clrf	7	;volatile
   426  06E3                     l736:
   427                           
   428                           ;main.c: 108:     TRISD = 0;
   429  06E3  1683               	bsf	3,5	;RP0=1, select bank1
   430  06E4  1303               	bcf	3,6	;RP1=0, select bank1
   431  06E5  0188               	clrf	8	;volatile
   432  06E6                     l738:
   433                           
   434                           ;main.c: 109:     PORTD = 0;
   435  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   436  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   437  06E8  0188               	clrf	8	;volatile
   438  06E9                     l740:
   439                           
   440                           ;main.c: 110:     TRISE = 0;
   441  06E9  1683               	bsf	3,5	;RP0=1, select bank1
   442  06EA  1303               	bcf	3,6	;RP1=0, select bank1
   443  06EB  0189               	clrf	9	;volatile
   444  06EC                     l742:
   445                           
   446                           ;main.c: 111:     PORTE = 0;
   447  06EC  1283               	bcf	3,5	;RP0=0, select bank0
   448  06ED  1303               	bcf	3,6	;RP1=0, select bank0
   449  06EE  0189               	clrf	9	;volatile
   450  06EF                     l744:
   451                           
   452                           ;main.c: 112:     ANSEL = 0;
   453  06EF  1683               	bsf	3,5	;RP0=1, select bank3
   454  06F0  1703               	bsf	3,6	;RP1=1, select bank3
   455  06F1  0188               	clrf	8	;volatile
   456  06F2                     l746:
   457                           
   458                           ;main.c: 113:     ANSELH = 0;
   459  06F2  0189               	clrf	9	;volatile
   460  06F3                     l748:
   461                           
   462                           ;main.c: 116:     OSCCONbits.IRCF = 0b0111;
   463  06F3  3070               	movlw	112
   464  06F4  1683               	bsf	3,5	;RP0=1, select bank1
   465  06F5  1303               	bcf	3,6	;RP1=0, select bank1
   466  06F6  048F               	iorwf	15,f	;volatile
   467  06F7                     l750:
   468                           
   469                           ;main.c: 117:     OSCCONbits.SCS = 1;
   470  06F7  140F               	bsf	15,0	;volatile
   471  06F8                     l55:
   472  06F8  0008               	return
   473  06F9                     __end_of_setup:
   474                           
   475                           	psect	text2
   476  06F9                     __ptext2:	
   477 ;; *************** function _semaforo *****************
   478 ;; Defined at:
   479 ;;		line 200 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          3       0       0       0       0
   496 ;;      Totals:         3       0       0       0       0
   497 ;;Total ram usage:        3 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    1
   500 ;; This function calls:
   501 ;;		_Config_7
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _semaforo
   509  06F9                     _semaforo:
   510  06F9                     l752:	
   511                           ;incstack = 0
   512                           ; Regs used in _semaforo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   513                           
   514                           
   515                           ;main.c: 202:     PORTE = 0b111;
   516  06F9  3007               	movlw	7
   517  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   518  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   519  06FC  0089               	movwf	9	;volatile
   520  06FD                     l754:
   521                           
   522                           ;main.c: 204:     PORTD = 0;
   523  06FD  0188               	clrf	8	;volatile
   524  06FE                     l756:
   525                           
   526                           ;main.c: 205:     numero = Config_7(3);
   527  06FE  3003               	movlw	3
   528  06FF  120A  118A  2768  120A  118A  	fcall	_Config_7
   529  0704  00F5               	movwf	??_semaforo
   530  0705  0875               	movf	??_semaforo,w
   531  0706  00F9               	movwf	_numero
   532  0707                     l758:
   533                           
   534                           ;main.c: 206:     PORTD = numero;
   535  0707  0879               	movf	_numero,w
   536  0708  1283               	bcf	3,5	;RP0=0, select bank0
   537  0709  1303               	bcf	3,6	;RP1=0, select bank0
   538  070A  0088               	movwf	8	;volatile
   539  070B                     l760:
   540                           
   541                           ;main.c: 208:     _delay((unsigned long)((1500)*(4000000/4000.0)));
   542  070B  3008               	movlw	8
   543  070C  00F7               	movwf	??_semaforo+2
   544  070D  309D               	movlw	157
   545  070E  00F6               	movwf	??_semaforo+1
   546  070F  3005               	movlw	5
   547  0710  00F5               	movwf	??_semaforo
   548  0711                     u27:
   549  0711  0BF5               	decfsz	??_semaforo,f
   550  0712  2F11               	goto	u27
   551  0713  0BF6               	decfsz	??_semaforo+1,f
   552  0714  2F11               	goto	u27
   553  0715  0BF7               	decfsz	??_semaforo+2,f
   554  0716  2F11               	goto	u27
   555  0717  2F18               	nop2
   556  0718                     l762:
   557                           
   558                           ;main.c: 209:     PORTE = 0b110;
   559  0718  3006               	movlw	6
   560  0719  1283               	bcf	3,5	;RP0=0, select bank0
   561  071A  1303               	bcf	3,6	;RP1=0, select bank0
   562  071B  0089               	movwf	9	;volatile
   563  071C                     l764:
   564                           
   565                           ;main.c: 211:     PORTD = 0;
   566  071C  0188               	clrf	8	;volatile
   567                           
   568                           ;main.c: 212:     numero = Config_7(2);
   569  071D  3002               	movlw	2
   570  071E  120A  118A  2768  120A  118A  	fcall	_Config_7
   571  0723  00F5               	movwf	??_semaforo
   572  0724  0875               	movf	??_semaforo,w
   573  0725  00F9               	movwf	_numero
   574  0726                     l766:
   575                           
   576                           ;main.c: 213:     PORTD = numero;
   577  0726  0879               	movf	_numero,w
   578  0727  1283               	bcf	3,5	;RP0=0, select bank0
   579  0728  1303               	bcf	3,6	;RP1=0, select bank0
   580  0729  0088               	movwf	8	;volatile
   581  072A                     l768:
   582                           
   583                           ;main.c: 215:     _delay((unsigned long)((1500)*(4000000/4000.0)));
   584  072A  3008               	movlw	8
   585  072B  00F7               	movwf	??_semaforo+2
   586  072C  309D               	movlw	157
   587  072D  00F6               	movwf	??_semaforo+1
   588  072E  3005               	movlw	5
   589  072F  00F5               	movwf	??_semaforo
   590  0730                     u37:
   591  0730  0BF5               	decfsz	??_semaforo,f
   592  0731  2F30               	goto	u37
   593  0732  0BF6               	decfsz	??_semaforo+1,f
   594  0733  2F30               	goto	u37
   595  0734  0BF7               	decfsz	??_semaforo+2,f
   596  0735  2F30               	goto	u37
   597  0736  2F37               	nop2
   598  0737                     l770:
   599                           
   600                           ;main.c: 216:     PORTE = 0b100;
   601  0737  3004               	movlw	4
   602  0738  1283               	bcf	3,5	;RP0=0, select bank0
   603  0739  1303               	bcf	3,6	;RP1=0, select bank0
   604  073A  0089               	movwf	9	;volatile
   605  073B                     l772:
   606                           
   607                           ;main.c: 218:     PORTD = 0;
   608  073B  0188               	clrf	8	;volatile
   609  073C                     l774:
   610                           
   611                           ;main.c: 219:     numero = Config_7(1);
   612  073C  3001               	movlw	1
   613  073D  120A  118A  2768  120A  118A  	fcall	_Config_7
   614  0742  00F5               	movwf	??_semaforo
   615  0743  0875               	movf	??_semaforo,w
   616  0744  00F9               	movwf	_numero
   617  0745                     l776:
   618                           
   619                           ;main.c: 220:     PORTD = numero;
   620  0745  0879               	movf	_numero,w
   621  0746  1283               	bcf	3,5	;RP0=0, select bank0
   622  0747  1303               	bcf	3,6	;RP1=0, select bank0
   623  0748  0088               	movwf	8	;volatile
   624  0749                     l778:
   625                           
   626                           ;main.c: 222:     _delay((unsigned long)((1500)*(4000000/4000.0)));
   627  0749  3008               	movlw	8
   628  074A  00F7               	movwf	??_semaforo+2
   629  074B  309D               	movlw	157
   630  074C  00F6               	movwf	??_semaforo+1
   631  074D  3005               	movlw	5
   632  074E  00F5               	movwf	??_semaforo
   633  074F                     u47:
   634  074F  0BF5               	decfsz	??_semaforo,f
   635  0750  2F4F               	goto	u47
   636  0751  0BF6               	decfsz	??_semaforo+1,f
   637  0752  2F4F               	goto	u47
   638  0753  0BF7               	decfsz	??_semaforo+2,f
   639  0754  2F4F               	goto	u47
   640  0755  2F56               	nop2
   641  0756                     l780:
   642                           
   643                           ;main.c: 223:     PORTE = 0b000;
   644  0756  1283               	bcf	3,5	;RP0=0, select bank0
   645  0757  1303               	bcf	3,6	;RP1=0, select bank0
   646  0758  0189               	clrf	9	;volatile
   647  0759                     l782:
   648                           
   649                           ;main.c: 225:     PORTD = 0;
   650  0759  0188               	clrf	8	;volatile
   651  075A                     l784:
   652                           
   653                           ;main.c: 226:     numero = Config_7(0);
   654  075A  3000               	movlw	0
   655  075B  120A  118A  2768  120A  118A  	fcall	_Config_7
   656  0760  00F5               	movwf	??_semaforo
   657  0761  0875               	movf	??_semaforo,w
   658  0762  00F9               	movwf	_numero
   659  0763                     l786:
   660                           
   661                           ;main.c: 227:     PORTD = numero;
   662  0763  0879               	movf	_numero,w
   663  0764  1283               	bcf	3,5	;RP0=0, select bank0
   664  0765  1303               	bcf	3,6	;RP1=0, select bank0
   665  0766  0088               	movwf	8	;volatile
   666  0767                     l79:
   667  0767  0008               	return
   668  0768                     __end_of_semaforo:
   669                           
   670                           	psect	text3
   671  0768                     __ptext3:	
   672 ;; *************** function _Config_7 *****************
   673 ;; Defined at:
   674 ;;		line 138 in file "main.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  numero7         1    wreg     unsigned char 
   677 ;; Auto vars:     Size  Location     Type
   678 ;;  numero7         1    2[COMMON] unsigned char 
   679 ;;  valor           1    4[COMMON] unsigned char 
   680 ;;  seg             1    3[COMMON] unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      unsigned char 
   683 ;; Registers used:
   684 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         3       0       0       0       0
   692 ;;      Temps:          2       0       0       0       0
   693 ;;      Totals:         5       0       0       0       0
   694 ;;Total ram usage:        5 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_semaforo
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           
   704                           ;psect for function _Config_7
   705  0768                     _Config_7:
   706                           
   707                           ;incstack = 0
   708                           ; Regs used in _Config_7: [wreg-fsr0h+status,2+status,0]
   709                           ;Config_7@numero7 stored from wreg
   710  0768  00F2               	movwf	Config_7@numero7
   711  0769                     l680:
   712                           
   713                           ;main.c: 138: uint8_t Config_7(uint8_t numero7);main.c: 139: {;main.c: 143:     uint8_t 
      +                          valor, seg;;main.c: 144:     seg = numero7;
   714  0769  0872               	movf	Config_7@numero7,w
   715  076A  00F0               	movwf	??_Config_7
   716  076B  0870               	movf	??_Config_7,w
   717  076C  00F3               	movwf	Config_7@seg
   718                           
   719                           ;main.c: 146:     switch(seg)
   720  076D  2FBE               	goto	l716
   721  076E                     l682:
   722                           
   723                           ;main.c: 149:             valor= 0b00111111;
   724  076E  303F               	movlw	63
   725  076F  00F0               	movwf	??_Config_7
   726  0770  0870               	movf	??_Config_7,w
   727  0771  00F4               	movwf	Config_7@valor
   728                           
   729                           ;main.c: 150:             break;
   730  0772  2FF8               	goto	l718
   731  0773                     l684:
   732                           
   733                           ;main.c: 152:             valor= 0b00000110;
   734  0773  3006               	movlw	6
   735  0774  00F0               	movwf	??_Config_7
   736  0775  0870               	movf	??_Config_7,w
   737  0776  00F4               	movwf	Config_7@valor
   738                           
   739                           ;main.c: 153:             break;
   740  0777  2FF8               	goto	l718
   741  0778                     l686:
   742                           
   743                           ;main.c: 155:             valor= 0b01011011;
   744  0778  305B               	movlw	91
   745  0779  00F0               	movwf	??_Config_7
   746  077A  0870               	movf	??_Config_7,w
   747  077B  00F4               	movwf	Config_7@valor
   748                           
   749                           ;main.c: 156:             break;
   750  077C  2FF8               	goto	l718
   751  077D                     l688:
   752                           
   753                           ;main.c: 158:             valor= 0b01001111;
   754  077D  304F               	movlw	79
   755  077E  00F0               	movwf	??_Config_7
   756  077F  0870               	movf	??_Config_7,w
   757  0780  00F4               	movwf	Config_7@valor
   758                           
   759                           ;main.c: 159:             break;
   760  0781  2FF8               	goto	l718
   761  0782                     l690:
   762                           
   763                           ;main.c: 161:             valor= 0b01100110;
   764  0782  3066               	movlw	102
   765  0783  00F0               	movwf	??_Config_7
   766  0784  0870               	movf	??_Config_7,w
   767  0785  00F4               	movwf	Config_7@valor
   768                           
   769                           ;main.c: 162:             break;
   770  0786  2FF8               	goto	l718
   771  0787                     l692:
   772                           
   773                           ;main.c: 164:             valor= 0b01101101;
   774  0787  306D               	movlw	109
   775  0788  00F0               	movwf	??_Config_7
   776  0789  0870               	movf	??_Config_7,w
   777  078A  00F4               	movwf	Config_7@valor
   778                           
   779                           ;main.c: 165:             break;
   780  078B  2FF8               	goto	l718
   781  078C                     l694:
   782                           
   783                           ;main.c: 167:             valor= 0b01111101;
   784  078C  307D               	movlw	125
   785  078D  00F0               	movwf	??_Config_7
   786  078E  0870               	movf	??_Config_7,w
   787  078F  00F4               	movwf	Config_7@valor
   788                           
   789                           ;main.c: 168:             break;
   790  0790  2FF8               	goto	l718
   791  0791                     l696:
   792                           
   793                           ;main.c: 170:             valor= 0b00000111;
   794  0791  3007               	movlw	7
   795  0792  00F0               	movwf	??_Config_7
   796  0793  0870               	movf	??_Config_7,w
   797  0794  00F4               	movwf	Config_7@valor
   798                           
   799                           ;main.c: 171:             break;
   800  0795  2FF8               	goto	l718
   801  0796                     l698:
   802                           
   803                           ;main.c: 173:             valor= 0b01111111;
   804  0796  307F               	movlw	127
   805  0797  00F0               	movwf	??_Config_7
   806  0798  0870               	movf	??_Config_7,w
   807  0799  00F4               	movwf	Config_7@valor
   808                           
   809                           ;main.c: 174:             break;
   810  079A  2FF8               	goto	l718
   811  079B                     l700:
   812                           
   813                           ;main.c: 176:             valor= 0b01101111;
   814  079B  306F               	movlw	111
   815  079C  00F0               	movwf	??_Config_7
   816  079D  0870               	movf	??_Config_7,w
   817  079E  00F4               	movwf	Config_7@valor
   818                           
   819                           ;main.c: 177:             break;
   820  079F  2FF8               	goto	l718
   821  07A0                     l702:
   822                           
   823                           ;main.c: 179:             valor= 0b01110111;
   824  07A0  3077               	movlw	119
   825  07A1  00F0               	movwf	??_Config_7
   826  07A2  0870               	movf	??_Config_7,w
   827  07A3  00F4               	movwf	Config_7@valor
   828                           
   829                           ;main.c: 180:             break;
   830  07A4  2FF8               	goto	l718
   831  07A5                     l704:
   832                           
   833                           ;main.c: 182:             valor= 0b01111100;
   834  07A5  307C               	movlw	124
   835  07A6  00F0               	movwf	??_Config_7
   836  07A7  0870               	movf	??_Config_7,w
   837  07A8  00F4               	movwf	Config_7@valor
   838                           
   839                           ;main.c: 183:             break;
   840  07A9  2FF8               	goto	l718
   841  07AA                     l706:
   842                           
   843                           ;main.c: 185:             valor= 0b00111001;
   844  07AA  3039               	movlw	57
   845  07AB  00F0               	movwf	??_Config_7
   846  07AC  0870               	movf	??_Config_7,w
   847  07AD  00F4               	movwf	Config_7@valor
   848                           
   849                           ;main.c: 186:             break;
   850  07AE  2FF8               	goto	l718
   851  07AF                     l708:
   852                           
   853                           ;main.c: 188:             valor= 0b01011110;
   854  07AF  305E               	movlw	94
   855  07B0  00F0               	movwf	??_Config_7
   856  07B1  0870               	movf	??_Config_7,w
   857  07B2  00F4               	movwf	Config_7@valor
   858                           
   859                           ;main.c: 189:             break;
   860  07B3  2FF8               	goto	l718
   861  07B4                     l710:
   862                           
   863                           ;main.c: 191:             valor= 0b01111001;
   864  07B4  3079               	movlw	121
   865  07B5  00F0               	movwf	??_Config_7
   866  07B6  0870               	movf	??_Config_7,w
   867  07B7  00F4               	movwf	Config_7@valor
   868                           
   869                           ;main.c: 192:             break;
   870  07B8  2FF8               	goto	l718
   871  07B9                     l712:
   872                           
   873                           ;main.c: 194:             valor= 0b01110001;
   874  07B9  3071               	movlw	113
   875  07BA  00F0               	movwf	??_Config_7
   876  07BB  0870               	movf	??_Config_7,w
   877  07BC  00F4               	movwf	Config_7@valor
   878                           
   879                           ;main.c: 195:             break;
   880  07BD  2FF8               	goto	l718
   881  07BE                     l716:
   882  07BE  0873               	movf	Config_7@seg,w
   883  07BF  00F0               	movwf	??_Config_7
   884  07C0  01F1               	clrf	??_Config_7+1
   885                           
   886                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   887                           ; Switch size 1, requested type "simple"
   888                           ; Number of cases is 1, Range of values is 0 to 0
   889                           ; switch strategies available:
   890                           ; Name         Instructions Cycles
   891                           ; simple_byte            4     3 (average)
   892                           ; direct_byte           11     8 (fixed)
   893                           ; jumptable            260     6 (fixed)
   894                           ;	Chosen strategy is simple_byte
   895  07C1  0871               	movf	??_Config_7+1,w
   896  07C2  3A00               	xorlw	0	; case 0
   897  07C3  1903               	skipnz
   898  07C4  2FC6               	goto	l812
   899  07C5  2FF8               	goto	l718
   900  07C6                     l812:
   901                           
   902                           ; Switch size 1, requested type "simple"
   903                           ; Number of cases is 16, Range of values is 0 to 15
   904                           ; switch strategies available:
   905                           ; Name         Instructions Cycles
   906                           ; simple_byte           49    25 (average)
   907                           ; direct_byte           56     8 (fixed)
   908                           ; jumptable            260     6 (fixed)
   909                           ;	Chosen strategy is simple_byte
   910  07C6  0870               	movf	??_Config_7,w
   911  07C7  3A00               	xorlw	0	; case 0
   912  07C8  1903               	skipnz
   913  07C9  2F6E               	goto	l682
   914  07CA  3A01               	xorlw	1	; case 1
   915  07CB  1903               	skipnz
   916  07CC  2F73               	goto	l684
   917  07CD  3A03               	xorlw	3	; case 2
   918  07CE  1903               	skipnz
   919  07CF  2F78               	goto	l686
   920  07D0  3A01               	xorlw	1	; case 3
   921  07D1  1903               	skipnz
   922  07D2  2F7D               	goto	l688
   923  07D3  3A07               	xorlw	7	; case 4
   924  07D4  1903               	skipnz
   925  07D5  2F82               	goto	l690
   926  07D6  3A01               	xorlw	1	; case 5
   927  07D7  1903               	skipnz
   928  07D8  2F87               	goto	l692
   929  07D9  3A03               	xorlw	3	; case 6
   930  07DA  1903               	skipnz
   931  07DB  2F8C               	goto	l694
   932  07DC  3A01               	xorlw	1	; case 7
   933  07DD  1903               	skipnz
   934  07DE  2F91               	goto	l696
   935  07DF  3A0F               	xorlw	15	; case 8
   936  07E0  1903               	skipnz
   937  07E1  2F96               	goto	l698
   938  07E2  3A01               	xorlw	1	; case 9
   939  07E3  1903               	skipnz
   940  07E4  2F9B               	goto	l700
   941  07E5  3A03               	xorlw	3	; case 10
   942  07E6  1903               	skipnz
   943  07E7  2FA0               	goto	l702
   944  07E8  3A01               	xorlw	1	; case 11
   945  07E9  1903               	skipnz
   946  07EA  2FA5               	goto	l704
   947  07EB  3A07               	xorlw	7	; case 12
   948  07EC  1903               	skipnz
   949  07ED  2FAA               	goto	l706
   950  07EE  3A01               	xorlw	1	; case 13
   951  07EF  1903               	skipnz
   952  07F0  2FAF               	goto	l708
   953  07F1  3A03               	xorlw	3	; case 14
   954  07F2  1903               	skipnz
   955  07F3  2FB4               	goto	l710
   956  07F4  3A01               	xorlw	1	; case 15
   957  07F5  1903               	skipnz
   958  07F6  2FB9               	goto	l712
   959  07F7  2FF8               	goto	l718
   960  07F8                     l718:
   961                           
   962                           ;main.c: 197:     return valor;
   963  07F8  0874               	movf	Config_7@valor,w
   964  07F9                     l76:
   965  07F9  0008               	return
   966  07FA                     __end_of_Config_7:
   967  007E                     btemp	set	126	;btemp
   968  007E                     wtemp0	set	126
   969                           
   970                           	psect	config
   971                           
   972                           ;Config register CONFIG1 @ 0x2007
   973                           ;	Oscillator Selection bits
   974                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   975                           ;	Watchdog Timer Enable bit
   976                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   977                           ;	Power-up Timer Enable bit
   978                           ;	PWRTE = OFF, PWRT disabled
   979                           ;	RE3/MCLR pin function select bit
   980                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   981                           ;	Code Protection bit
   982                           ;	CP = OFF, Program memory code protection is disabled
   983                           ;	Data Code Protection bit
   984                           ;	CPD = OFF, Data memory code protection is disabled
   985                           ;	Brown Out Reset Selection bits
   986                           ;	BOREN = OFF, BOR disabled
   987                           ;	Internal External Switchover bit
   988                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   989                           ;	Fail-Safe Clock Monitor Enabled bit
   990                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   991                           ;	Low Voltage Programming Enable bit
   992                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   993                           ;	In-Circuit Debugger Mode bit
   994                           ;	DEBUG = 0x1, unprogrammed default
   995  2007                     	org	8199
   996  2007  20D4               	dw	8404
   997                           
   998                           ;Config register CONFIG2 @ 0x2008
   999                           ;	Brown-out Reset Selection bit
  1000                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1001                           ;	Flash Program Memory Self Write Enable bits
  1002                           ;	WRT = OFF, Write protection off
  1003  2008                     	org	8200
  1004  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_semaforo
    _semaforo->_Config_7

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                           _semaforo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             3     3      0      45
                                              5 COMMON     3     3      0
                           _Config_7
 ---------------------------------------------------------------------------------
 (2) _Config_7                                             5     5      0      45
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _semaforo
     _Config_7
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 15 21:39:34 2021

                     l44 06C0                       l55 06F8                       l47 06CC  
                     l48 06CC                       l76 07F9                       l79 0767  
                     u10 06C6                       u11 06C5                       u27 0711  
                     u37 0730                       u47 074F                      l700 079B  
                    l710 07B4                      l702 07A0                      l712 07B9  
                    l704 07A5                      l706 07AA                      l730 06DA  
                    l812 07C6                      l708 07AF                      l716 07BE  
                    l740 06E9                      l732 06DD                      l718 07F8  
                    l750 06F7                      l742 06EC                      l734 06E0  
                    l726 06D0                      l680 0769                      l760 070B  
                    l752 06F9                      l744 06EF                      l736 06E3  
                    l728 06D6                      l690 0782                      l682 076E  
                    l770 0737                      l762 0718                      l754 06FD  
                    l746 06F2                      l738 06E6                      l692 0787  
                    l684 0773                      l780 0756                      l772 073B  
                    l764 071C                      l756 06FE                      l748 06F3  
                    l694 078C                      l686 0778                      l782 0759  
                    l774 073C                      l766 0726                      l758 0707  
                    l790 06C6                      l696 0791                      l688 077D  
                    l784 075A                      l776 0745                      l768 072A  
                    l698 0796                      l786 0763                      l778 0749  
                    l788 06BB                     _main 06BB                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 06D0                    status 0003  
                  wtemp0 007E         __end_of_Config_7 07FA          __initialization 07FA  
           __end_of_main 06D0                   ??_main 0078                   ?_setup 0070  
                 _ANSELH 0189                   _numero 0079         __end_of_semaforo 0768  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 06F9  
              ?_Config_7 0070                  ??_setup 0070               __pmaintext 06BB  
             ??_Config_7 0070                ?_semaforo 0070                  _ganador 0078  
                __ptext1 06D0                  __ptext2 06F9                  __ptext3 0768  
   end_of_initialization 07FC               ??_semaforo 0075                _PORTBbits 0006  
    start_initialization 07FA        __size_of_Config_7 0092              __pbssCOMMON 0078  
              ___latbits 0002        __size_of_semaforo 006F           __size_of_setup 0029  
          Config_7@valor 0074                 _Config_7 0768            __size_of_main 0015  
        Config_7@numero7 0072                 _semaforo 06F9              Config_7@seg 0073  
             _OSCCONbits 008F  
